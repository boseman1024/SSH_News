<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
   http://www.springframework.org/schema/beans 
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
   http://www.springframework.org/schema/tx 
   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
   http://www.springframework.org/schema/aop 
   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
   ">
	<!-- Druid连接池设置 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/news" />
		<property name="username" value="root" />
		<property name="password" value="moon03110071" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="0" />
		<property name="minIdle" value="0" />
		<property name="maxIdle" value="10" />
		<property name="maxActive" value="1000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="6000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="1800000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 <property name="poolPreparedStatements" 
			value="false" /> <property name="maxPoolPreparedStatementPerConnectionSize" 
			value="20" /> -->
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="mergeStat" />
	</bean>

	<!-- 配置sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingResources">
			<list>
				<value>com/news/mapping/Admin.hbm.xml</value>
				<value>com/news/mapping/Newsinfo.hbm.xml</value>
				<value>com/news/mapping/Topic.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- 系统使用的数据库类型 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<!-- 是否打印Hibernate生成的SQL到控制台 -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- 是否格式化打印出来的SQL -->
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>

	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 拦截器方式配置事物 <tx:advice id="transactionAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> 以如下关键字开头的方法使用事物 <tx:method name="add*" /> <tx:method name="save*" 
		/> <tx:method name="update*" /> <tx:method name="modify*" /> <tx:method name="edit*" 
		/> <tx:method name="delete*" /> <tx:method name="remove*" /> <tx:method name="repair" 
		/> <tx:method name="deleteAndRepair" /> 以如下关键字开头的方法不使用事物 <tx:method name="get*" 
		propagation="SUPPORTS" /> <tx:method name="find*" propagation="SUPPORTS" 
		/> <tx:method name="load*" propagation="SUPPORTS" /> <tx:method name="search*" 
		propagation="SUPPORTS" /> <tx:method name="datagrid*" propagation="SUPPORTS" 
		/> 其他方法不使用事物 <tx:method name="*" propagation="SUPPORTS" /> </tx:attributes> 
		</tx:advice> -->
	<!-- 切面，将事物用在哪些对象上 <aop:config> <aop:pointcut id="transactionPointcut" expression="execution(* 
		me.gacl.service..*Impl.*(..))" /> <aop:advisor pointcut-ref="transactionPointcut" 
		advice-ref="transactionAdvice" /> </aop:config> -->



</beans>